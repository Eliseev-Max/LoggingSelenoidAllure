{
  "uid" : "7d6b0113c1efdd61",
  "name" : "Проверка смены денежного выражения цены товаров при смене валюты",
  "fullName" : "test_MainPage#test_currency_of_product_price",
  "historyId" : "350632d02fbc894e0f1425bb99dd0fb3",
  "time" : {
    "start" : 1632396447730,
    "stop" : 1632396447730,
    "duration" : 0
  },
  "description" : " Проверяем смену денежного выражения цены избранных товаров при смене валюты ",
  "descriptionHtml" : "<p>Проверяем смену денежного выражения цены избранных товаров при смене валюты</p>\n",
  "status" : "broken",
  "statusMessage" : "NameError: name 'bversion' is not defined",
  "statusTrace" : "request = <SubRequest 'browser' for <Function test_currency_of_product_price>>\n\n    @pytest.fixture\n    def browser(request):\n        browser = request.config.getoption(\"--browser\")\n        executor = request.config.getoption(\"--executor\")  # где находится Selenium Server\n        selenoid = request.config.getoption(\"--selenoid\")\n        headless = request.config.getoption(\"--headless\")\n        maximized = request.config.getoption(\"--maximized\")\n        version = request.config.getoption(\"--bversion\")\n        vnc = request.config.getoption(\"--vnc\")\n        logs = request.config.getoption(\"--logs\")\n        videos = request.config.getoption(\"--videos\")\n        mobile = request.config.getoption(\"--mobile\")\n        logger = logging.getLogger('BrowserLogger')\n        test_name = request.node.name\n    \n        logger.info(\"\\tTest \\\"{}\\\" is running\".format(test_name))\n    \n        # caps = {\n        #     \"browserName\": browser,\n        #     \"browserVersion\": version,\n        #     #\"screenResolution\": \"1280x720\",  # разрешение экрана\n        #     #\"name\": \"Max\",              # именовать прогоны тестов\n        #     \"selenoid:options\": {\n        #         \"enableVNC\": vnc,       # визуализация (прорисовка) выполнения тестов\n        #         \"enableVideo\": videos,  # запись видео выполнения теста\n        #         \"enableLog\": logs       # запись логов работы КОНТЕЙНЕРОВ\n        #     },\n        #     'acceptSslCerts': True,\n        #     'acceptInsecureCerts': True,\n        #     'timeZone': 'Europe/Moscow',\n        #     'goog:chromeOptions': {}\n        # }\n    \n        executor_url = f\"http://{executor}:4444/wd/hub\"\n    \n        capabilities = {\n            \"browserName\":browser,\n>           \"browserVersion\": bversion,\n            \"selenoid:options\": {\n                \"enableVNC\": vnc,\n                \"enableVideo\": videos\n            }\n        }\nE       NameError: name 'bversion' is not defined\n\nconftest.py:67: NameError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1632396447734,
      "stop" : 1632396447734,
      "duration" : 0
    },
    "status" : "broken",
    "statusMessage" : "NameError: name 'bversion' is not defined\n",
    "statusTrace" : "  File \"/home/max/venv/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/max/venv/lib/python3.6/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/max/venv/lib/python3.6/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/max/logging_in_PO/conftest.py\", line 67, in browser\n    \"browserVersion\": bversion,\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : " Проверяем смену денежного выражения цены избранных товаров при смене валюты ",
    "status" : "broken",
    "statusMessage" : "NameError: name 'bversion' is not defined",
    "statusTrace" : "request = <SubRequest 'browser' for <Function test_currency_of_product_price>>\n\n    @pytest.fixture\n    def browser(request):\n        browser = request.config.getoption(\"--browser\")\n        executor = request.config.getoption(\"--executor\")  # где находится Selenium Server\n        selenoid = request.config.getoption(\"--selenoid\")\n        headless = request.config.getoption(\"--headless\")\n        maximized = request.config.getoption(\"--maximized\")\n        version = request.config.getoption(\"--bversion\")\n        vnc = request.config.getoption(\"--vnc\")\n        logs = request.config.getoption(\"--logs\")\n        videos = request.config.getoption(\"--videos\")\n        mobile = request.config.getoption(\"--mobile\")\n        logger = logging.getLogger('BrowserLogger')\n        test_name = request.node.name\n    \n        logger.info(\"\\tTest \\\"{}\\\" is running\".format(test_name))\n    \n        # caps = {\n        #     \"browserName\": browser,\n        #     \"browserVersion\": version,\n        #     #\"screenResolution\": \"1280x720\",  # разрешение экрана\n        #     #\"name\": \"Max\",              # именовать прогоны тестов\n        #     \"selenoid:options\": {\n        #         \"enableVNC\": vnc,       # визуализация (прорисовка) выполнения тестов\n        #         \"enableVideo\": videos,  # запись видео выполнения теста\n        #         \"enableLog\": logs       # запись логов работы КОНТЕЙНЕРОВ\n        #     },\n        #     'acceptSslCerts': True,\n        #     'acceptInsecureCerts': True,\n        #     'timeZone': 'Europe/Moscow',\n        #     'goog:chromeOptions': {}\n        # }\n    \n        executor_url = f\"http://{executor}:4444/wd/hub\"\n    \n        capabilities = {\n            \"browserName\":browser,\n>           \"browserVersion\": bversion,\n            \"selenoid:options\": {\n                \"enableVNC\": vnc,\n                \"enableVideo\": videos\n            }\n        }\nE       NameError: name 'bversion' is not defined\n\nconftest.py:67: NameError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cc8e2044c4fcde68",
      "name" : "log",
      "source" : "cc8e2044c4fcde68.txt",
      "type" : "text/plain",
      "size" : 96
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_MainPage"
  }, {
    "name" : "host",
    "value" : "max-VirtualBox"
  }, {
    "name" : "thread",
    "value" : "8739-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_MainPage"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "7d6b0113c1efdd61.json",
  "parameterValues" : [ ]
}